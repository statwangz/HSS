// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// read_data
RcppExport SEXP read_data(Rcpp::String stringname, std::string fillMiss);
RcppExport SEXP _HSS_read_data(SEXP stringnameSEXP, SEXP fillMissSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::String >::type stringname(stringnameSEXP);
    Rcpp::traits::input_parameter< std::string >::type fillMiss(fillMissSEXP);
    rcpp_result_gen = Rcpp::wrap(read_data(stringname, fillMiss));
    return rcpp_result_gen;
END_RCPP
}
// scaleC
RcppExport SEXP scaleC(arma::mat X);
RcppExport SEXP _HSS_scaleC(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(scaleC(X));
    return rcpp_result_gen;
END_RCPP
}
// scaleC_ref
RcppExport SEXP scaleC_ref(arma::mat& X);
RcppExport SEXP _HSS_scaleC_ref(SEXP XSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::mat& >::type X(XSEXP);
    rcpp_result_gen = Rcpp::wrap(scaleC_ref(X));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_HSS_read_data", (DL_FUNC) &_HSS_read_data, 2},
    {"_HSS_scaleC", (DL_FUNC) &_HSS_scaleC, 1},
    {"_HSS_scaleC_ref", (DL_FUNC) &_HSS_scaleC_ref, 1},
    {NULL, NULL, 0}
};

RcppExport void R_init_HSS(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
